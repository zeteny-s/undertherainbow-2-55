@tailwind base;
@tailwind components;
@tailwind utilities;

/* React Grid Layout Styles */
.react-grid-layout {
  position: relative;
}

.react-grid-item {
  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);
  transition-property: left, top, width, height;
  will-change: transform;
}

.react-grid-item.cssTransforms {
  transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1), width 300ms cubic-bezier(0.4, 0, 0.2, 1), height 300ms cubic-bezier(0.4, 0, 0.2, 1);
}

.react-grid-item > .react-resizable-handle {
  position: absolute;
  width: 24px;
  height: 24px;
  bottom: 0;
  right: 0;
  background: linear-gradient(135deg, #3b82f6, #1d4ed8);
  border-radius: 8px 0 8px 0;
  box-sizing: border-box;
  cursor: se-resize;
  opacity: 0;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  transform: scale(0.8);
}

.react-grid-item > .react-resizable-handle::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 8px;
  height: 8px;
  background: white;
  border-radius: 2px;
  opacity: 0.8;
}

.react-grid-item:hover > .react-resizable-handle {
  opacity: 1;
  transform: scale(1);
}

.react-grid-item.react-grid-placeholder {
  background: linear-gradient(135deg, rgb(59 130 246 / 0.1), rgb(147 51 234 / 0.1));
  border: 2px dashed rgb(59 130 246 / 0.6);
  opacity: 0.8;
  transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 2;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
  border-radius: 16px;
  backdrop-filter: blur(8px);
}

.react-grid-item.react-draggable-dragging {
  transition: none;
  z-index: 3;
  opacity: 0.9;
  transform: rotate(1deg) scale(1.02);
  filter: drop-shadow(0 20px 25px rgb(0 0 0 / 0.15));
}

.react-grid-item.react-grid-resizing {
  opacity: 0.9;
  z-index: 3;
  filter: drop-shadow(0 10px 15px rgb(0 0 0 / 0.1));
}

/* Widget Container Styles */
.widget-container {
  position: relative;
  height: 100%;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.widget-container:hover {
  transform: translateY(-2px);
}

/* Drag Handle Styles */
.drag-handle {
  cursor: grab;
  touch-action: none;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.drag-handle:active {
  cursor: grabbing;
  transform: scale(0.95);
}

/* Custom Scrollbar for Widget Content */
.widget-container ::-webkit-scrollbar {
  width: 8px;
}

.widget-container ::-webkit-scrollbar-track {
  background: rgba(241, 245, 249, 0.5);
  border-radius: 4px;
}

.widget-container ::-webkit-scrollbar-thumb {
  background: linear-gradient(135deg, #cbd5e1, #94a3b8);
  border-radius: 4px;
  transition: background 0.2s ease;
}

.widget-container ::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(135deg, #94a3b8, #64748b);
}

/* Enhanced animations for premium feel */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

.widget-container {
  animation: fadeInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Staggered animation for widgets */
.widget-container:nth-child(1) { animation-delay: 0.1s; }
.widget-container:nth-child(2) { animation-delay: 0.2s; }
.widget-container:nth-child(3) { animation-delay: 0.3s; }
.widget-container:nth-child(4) { animation-delay: 0.4s; }
.widget-container:nth-child(5) { animation-delay: 0.5s; }
.widget-container:nth-child(6) { animation-delay: 0.6s; }
.widget-container:nth-child(7) { animation-delay: 0.7s; }

/* Improved focus states */
.react-grid-item:focus-within {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
  border-radius: 16px;
}

/* Dark theme styles */
.dark {
  color-scheme: dark;
}

.dark body {
  @apply bg-gray-900 text-gray-100;
}

.dark .bg-white {
  @apply bg-gray-800;
}

.dark .bg-gray-50 {
  @apply bg-gray-900;
}

.dark .bg-gray-100 {
  @apply bg-gray-800;
}

.dark .text-gray-900 {
  @apply text-gray-100;
}

.dark .text-gray-800 {
  @apply text-gray-200;
}

.dark .text-gray-700 {
  @apply text-gray-300;
}

.dark .text-gray-600 {
  @apply text-gray-400;
}

.dark .border-gray-200 {
  @apply border-gray-700;
}

.dark .border-gray-300 {
  @apply border-gray-600;
}

.dark .hover\:bg-gray-50:hover {
  @apply bg-gray-700;
}

.dark .hover\:bg-gray-100:hover {
  @apply bg-gray-700;
}

/* Compact mode styles */
.compact-mode {
  --spacing-unit: 0.75rem;
  --text-scale: 0.9;
}

.compact-mode .p-4 {
  padding: 0.75rem;
}

.compact-mode .p-6 {
  padding: 1rem;
}

.compact-mode .p-8 {
  padding: 1.5rem;
}

.compact-mode .py-8 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.compact-mode .mb-8 {
  margin-bottom: 1.5rem;
}

.compact-mode .gap-8 {
  gap: 1.5rem;
}

.compact-mode .space-y-8 > * + * {
  margin-top: 1.5rem;
}

.compact-mode .text-3xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.compact-mode .text-2xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.compact-mode .text-xl {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.compact-mode .text-lg {
  font-size: 1rem;
  line-height: 1.5rem;
}

/* High contrast mode */
.high-contrast {
  --contrast-multiplier: 1.5;
}

.high-contrast .text-gray-600 {
  color: #1f2937;
}

.high-contrast .text-gray-500 {
  color: #374151;
}

.high-contrast .text-gray-400 {
  color: #4b5563;
}

.high-contrast .border-gray-200 {
  border-color: #9ca3af;
}

.high-contrast .border-gray-300 {
  border-color: #6b7280;
}

.high-contrast .bg-gray-50 {
  background-color: #f3f4f6;
}

.high-contrast .bg-gray-100 {
  background-color: #e5e7eb;
}

/* No animations mode */
.no-animations *,
.no-animations *::before,
.no-animations *::after {
  animation-duration: 0.01ms !important;
  animation-iteration-count: 1 !important;
  transition-duration: 0.01ms !important;
  scroll-behavior: auto !important;
}

.no-animations .animate-spin {
  animation: none !important;
}

/* Dark mode high contrast adjustments - using custom properties to avoid circular dependencies */
.dark.high-contrast {
  --text-gray-400: #e5e7eb;
  --text-gray-500: #d1d5db;
  --text-gray-600: #e5e7eb;
  --border-gray-700: #6b7280;
  --border-gray-600: #9ca3af;
}

.dark.high-contrast [class*="text-gray-400"] {
  color: var(--text-gray-400);
}

.dark.high-contrast [class*="text-gray-500"] {
  color: var(--text-gray-500);
}

.dark.high-contrast [class*="text-gray-600"] {
  color: var(--text-gray-600);
}

.dark.high-contrast [class*="border-gray-700"] {
  border-color: var(--border-gray-700);
}

.dark.high-contrast [class*="border-gray-600"] {
  border-color: var(--border-gray-600);
}

/* Smooth transitions for theme changes */
* {
  transition-property: background-color, border-color, color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

/* Override transitions when animations are disabled */
.no-animations * {
  transition: none !important;
}